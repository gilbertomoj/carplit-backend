{
  "openapi": "3.0.2",
  "info": {
    "title": "Carplit REST API",
    "version": "1.0.0",
    "description": "A REST API built with Express and MongoDB. This API provides a way to organize your carpools, paths, passengers and finances."
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local server"
    },
    {
      "url": "https://carplit-backend.up.railway.app/",
      "description": "Main server"
    },
    {
      "url": "http://carplit-backend.herokuapp.com",
      "description": "Secondary server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Path",
      "description": "Operations about path"
    },
    {
      "name": "Passenger",
      "description": "Operations about passenger"
    },
    {
      "name": "Trip",
      "description": "Operations about trip"
    },
    {
      "name": "Finance",
      "description": "Operations about finance"
    },
    {
      "name": "Admin",
      "description": "Admin operations"
    }
  ],
  "paths": {
    "user/verify/email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "verify email",
        "description": "Endpoint to verify if given email already exist.",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "user@carplit.com"
                  }
                }
              }
            }
          }
        }
      }
    },
    "user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "register user",
        "description": "Endpoint to register a user",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "Carlit"
                  },
                  "email": {
                    "example": "user@carplit.com"
                  },
                  "password": {
                    "example": "test@123"
                  },
                  "average_consumption": {
                    "example": 2.5
                  },
                  "fuel_per_liter": {
                    "example": 12
                  }
                }
              }
            }
          }
        }
      }
    },
    "user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "login user",
        "description": "Endpoint to login",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "user@carplit.com"
                  },
                  "password": {
                    "example": "test@123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "user/retrieve/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "retrieve user",
        "description": "Endpoint to retrieve user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "user/update": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "update user",
        "description": "Endpoint to update user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "average_consumption": {
                    "example": "any"
                  },
                  "fuel_per_liter": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "user/delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "update user",
        "description": "Endpoint to update user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/recover_password": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "user/admin/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "list all users",
        "description": "Endpoint to list all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "path/list": {
      "get": {
        "tags": [
          "Path"
        ],
        "summary": "list user paths",
        "description": "Endpoint to list user paths",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "path/create": {
      "post": {
        "tags": [
          "Path"
        ],
        "summary": "register path",
        "description": "Endpoint to register a path",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "Casa - UFPE"
                  },
                  "totalDistance": {
                    "example": 16
                  }
                }
              }
            }
          }
        }
      }
    },
    "path/retrieve/{id}": {
      "get": {
        "tags": [
          "Path"
        ],
        "summary": "retrieve path",
        "description": "Endpoint to retrieve a path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "path/update/{id}": {
      "put": {
        "tags": [
          "Path"
        ],
        "summary": "update path",
        "description": "Endpoint to update a path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "totalDistance": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "path/delete/{id}": {
      "delete": {
        "tags": [
          "Path"
        ],
        "summary": "delete path",
        "description": "Endpoint to delete a path",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "path/admin/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "list all paths",
        "description": "Endpoint to list all paths",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "passenger/list": {
      "get": {
        "tags": [
          "Passenger"
        ],
        "summary": "list user passenger",
        "description": "Endpoint to list user passengers",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "passenger/create": {
      "post": {
        "tags": [
          "Passenger"
        ],
        "summary": "register passenger",
        "description": "Endpoint to create a passenger",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "Frodo Baggins"
                  },
                  "address": {
                    "example": "Shire, 13"
                  }
                }
              }
            }
          }
        }
      }
    },
    "passenger/retrieve/{id}": {
      "get": {
        "tags": [
          "Passenger"
        ],
        "summary": "retrieve passenger",
        "description": "Endpoint to list user passengers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "passenger/update/{id}": {
      "put": {
        "tags": [
          "Passenger"
        ],
        "summary": "update passenger",
        "description": "Endpoint to update a passenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "passenger/delete/{id}": {
      "delete": {
        "tags": [
          "Passenger"
        ],
        "summary": "delete passenger",
        "description": "Endpoint to delete a passenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "passenger/admin/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "list all passengers",
        "description": "Endpoint to list all passengers",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "trip/list": {
      "get": {
        "tags": [
          "Trip"
        ],
        "summary": "list user trips",
        "description": "Endpoint to list user trips",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "trip/create": {
      "post": {
        "tags": [
          "Trip"
        ],
        "description": "Endpoint to create a trip",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "passengers": {
                    "example": "any"
                  },
                  "path": {
                    "example": "any"
                  },
                  "date": {
                    "example": "any"
                  },
                  "value": {
                    "example": "any"
                  },
                  "isOwnerIncluded": {
                    "example": "any"
                  },
                  "isFixedValue": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "trip/passenger/payment/{ìd}": {
      "put": {
        "tags": [
          "Trip"
        ],
        "summary": "passenger payment",
        "description": "Endpoint to pay a passenger",
        "parameters": [
          {
            "name": "ìd",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "trip/admin/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "list all trips",
        "description": "Endpoint to list alls trips",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}